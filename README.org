#+TITLE: Web Приложение - генеалогическое древо

* Описание
:PROPERTIES:
:CUSTOM_ID: описание
:TOC: :ignore (this)
:END:
:PROPERTIES:
:CUSTOM_ID: описание

* Содержание 
:PROPERTIES:
:TOC:      :include all :force (depth) :ignore (this) :local (depth)
:CUSTOM_ID: содержание
:END:
:CONTENTS:
- [[#как-запустить][Как запустить]]
  - [[#бд][БД]]
  - [[#приложение][Приложение]]
    - [[#установка-переменных-окружения][Установка переменных окружения]]
      - [[#direnv][direnv]]
      - [[#стандартный-способ][Стандартный способ]]
:END:

* Как запустить
:PROPERTIES:
:CUSTOM_ID: как-запустить
:END:

** БД
:PROPERTIES:
:CUSTOM_ID: бд
:END:

Рекомендую использовать porsgresql в docker команда:
#+begin_src shell
docker run --name sovkom-postgres -e POSTGRES_PASSWORD=ssss#password \
-e POSTGRES_USER=secret_admin \
-e POSTGRES_DB=test-db \
-v postgres-val-sovkom:/var/lib/postgresql/data \
-p 5444:5432/tcp \
-d postgres
#+end_src

** Приложение
:PROPERTIES:
:CUSTOM_ID: приложение
:END:

*** Установка переменных окружения
:PROPERTIES:
:CUSTOM_ID: установка-переменных-окружения
:END:

**** direnv
:PROPERTIES:
:CUSTOM_ID: direnv
:END:
Просто добавить следуюшие строки в =.envrc=:
#+begin_src shell
export DEBUG=TRUE
export DB_HOST=localhost
export DB_NAME=test-db
export DB_USER=secret_admin
export DB_PORT=5444
export DB_PASSWORD=ssss#password
#+end_src

И выполнить команду =direnv allow=.
Затем можно запустить программу;
#+begin_src shell
python __init__.py
#+end_src
**** Стандартный способ
:PROPERTIES:
:CUSTOM_ID: стандартный-способ
:END:

Нужно либо в терминал вбить команды выше, либо выполнить таким образом
#+begin_src shell
DEBUG=<TRUE|FALSE> DB_HOST=... python __init__.py
#+end_src
